{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/pongster/Documents/ezpcbutworkingthistime/FRONTEND/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverseFast;\nvar _definitions = require(\"../definitions\");\nfunction traverseFast(node, enter, opts) {\n  if (!node) return;\n  var keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  opts = opts || {};\n  enter(node, opts);\n  var _iterator = _createForOfIteratorHelper(keys),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var subNode = node[key];\n      if (Array.isArray(subNode)) {\n        var _iterator2 = _createForOfIteratorHelper(subNode),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _node = _step2.value;\n            traverseFast(_node, enter, opts);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else {\n        traverseFast(subNode, enter, opts);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}","map":{"version":3,"names":["_definitions","require","traverseFast","node","enter","opts","keys","VISITOR_KEYS","type","_iterator","_createForOfIteratorHelper","_step","s","n","done","key","value","subNode","Array","isArray","_iterator2","_step2","err","e","f"],"sources":["C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\node_modules\\@babel\\types\\src\\traverse\\traverseFast.ts"],"sourcesContent":["import { VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\n/**\n * A prefix AST traversal implementation meant for simple searching\n * and processing.\n */\nexport default function traverseFast<Options = {}>(\n  node: t.Node | null | undefined,\n  enter: (node: t.Node, opts?: Options) => void,\n  opts?: Options,\n): void {\n  if (!node) return;\n\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  opts = opts || ({} as Options);\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode: t.Node | undefined | null =\n      // @ts-expect-error key must present in node\n      node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAOe,SAASC,YAAYA,CAClCC,IAA+B,EAC/BC,KAA6C,EAC7CC,IAAc,EACR;EACN,IAAI,CAACF,IAAI,EAAE;EAEX,IAAMG,IAAI,GAAGN,YAAA,CAAAO,YAAY,CAACJ,IAAI,CAACK,IAAI,CAAC;EACpC,IAAI,CAACF,IAAI,EAAE;EAEXD,IAAI,GAAGA,IAAI,IAAK,CAAC,CAAa;EAC9BD,KAAK,CAACD,IAAI,EAAEE,IAAI,CAAC;EAAA,IAAAI,SAAA,GAAAC,0BAAA,CAECJ,IAAI;IAAAK,KAAA;EAAA;IAAtB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAwB;MAAA,IAAbC,GAAG,GAAAJ,KAAA,CAAAK,KAAA;MACZ,IAAMC,OAAkC,GAEtCd,IAAI,CAACY,GAAG,CAAC;MAEX,IAAIG,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;QAAA,IAAAG,UAAA,GAAAV,0BAAA,CACPO,OAAO;UAAAI,MAAA;QAAA;UAA1B,KAAAD,UAAA,CAAAR,CAAA,MAAAS,MAAA,GAAAD,UAAA,CAAAP,CAAA,IAAAC,IAAA,GAA4B;YAAA,IAAjBX,KAAI,GAAAkB,MAAA,CAAAL,KAAA;YACbd,YAAY,CAACC,KAAI,EAAEC,KAAK,EAAEC,IAAI,CAAC;UACjC;QAAA,SAAAiB,GAAA;UAAAF,UAAA,CAAAG,CAAA,CAAAD,GAAA;QAAA;UAAAF,UAAA,CAAAI,CAAA;QAAA;MACF,CAAC,MAAM;QACLtB,YAAY,CAACe,OAAO,EAAEb,KAAK,EAAEC,IAAI,CAAC;MACpC;IACF;EAAA,SAAAiB,GAAA;IAAAb,SAAA,CAAAc,CAAA,CAAAD,GAAA;EAAA;IAAAb,SAAA,CAAAe,CAAA;EAAA;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}