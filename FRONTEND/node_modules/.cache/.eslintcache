[{"C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\index.js":"1","C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\App.js":"2","C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\reportWebVitals.js":"3","C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\Home.js":"4","C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\MyModel.js":"5","C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\Variables.js":"6"},{"size":552,"mtime":1685298251256,"results":"7","hashOfConfig":"8"},{"size":1125,"mtime":1685298251254,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1685298251256,"results":"10","hashOfConfig":"8"},{"size":216,"mtime":1685298251255,"results":"11","hashOfConfig":"8"},{"size":14988,"mtime":1685298251255,"results":"12","hashOfConfig":"8"},{"size":67,"mtime":1685298251255,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"95o9ij",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\index.js",[],[],"C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\App.js",[],[],"C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\reportWebVitals.js",[],[],"C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\Home.js",[],[],"C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\MyModel.js",["33","34","35","36","37","38","39"],[],"import React, { Component } from 'react';\r\nimport { variables } from './Variables.js';\r\nimport { tsConstructorType } from '@babel/types';\r\n\r\nexport class MyModel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mymodel: [],\r\n            modalTitle:\"\",\r\n            Name:\"\",\r\n            Size:\"\",\r\n            MyModelId: 0,\r\n\r\n            MyModelIdFilter: \"\",\r\n            NameFilter: \"\",\r\n            mymodelWithoutFilter: []\r\n        }\r\n    }\r\n\r\n    FilterFn(){\r\n        var MyModelIdFilter = this.state.MyModelIdFilter ?? '';\r\n        var NameFilter = this.state.NameFilter ?? '';\r\n        var SizeFilter = this.state.SizeFilter ?? '';\r\n\r\n        var filteredData = this.state.mymodelWithoutFilter.filter(\r\n            function(el){\r\n                return el.MyModelId.toString().toLowerCase().includes(\r\n                    MyModelIdFilter.toString().trim().toLowerCase()\r\n                ) &&\r\n                el.Name.toString().toLowerCase().includes(\r\n                    NameFilter.toString().trim().toLowerCase()\r\n                ) &&\r\n                el.Size.toString().toLowerCase().includes(\r\n                    SizeFilter.toString().trim().toLowerCase()\r\n                )\r\n            }\r\n        );\r\n\r\n        this.setState({mymodel:filteredData})\r\n    }\r\n\r\n    sortResult(prop,asc){\r\n        var sortedData = this.state.mymodelWithoutFilter.sort(function(a,b){\r\n            if(asc){\r\n                return (a[prop]>b[prop])?1:((a[prop]<b[prop])?-1:0)\r\n            }\r\n            else {\r\n                return (b[prop]>a[prop])?1:((b[prop]<a[prop])?-1:0)\r\n            }\r\n        });\r\n\r\n        this.setState({mymodel:sortedData});\r\n    }\r\n\r\n    changeMyModelIdFilter = (e)=> {\r\n        this.state.MyModelIdFilter = e.target.value;\r\n        this.FilterFn();\r\n    }\r\n\r\n    changeNameFilter = (e)=> {\r\n        this.state.NameFilter = e.target.value;\r\n        this.FilterFn();\r\n    }\r\n\r\n    changeSizeFilter = (e)=> {\r\n        this.state.SizeFilter = e.target.value;\r\n        this.FilterFn();\r\n    }\r\n\r\n    refreshList(){\r\n        fetch(variables.API_URL+'mymodel/')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.setState({mymodel:data, mymodelWithoutFilter:data});\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n\r\n    changeMyModelName =(e)=>{\r\n        this.setState({Name:e.target.value});\r\n    }\r\n\r\n    addClick(){\r\n        this.setState({\r\n            modalTitle: \"Add MyModel\",\r\n            MyModelId: 0,\r\n            Name:\"\"\r\n        });\r\n    }\r\n\r\n    editClick(dep){\r\n        this.setState({\r\n            modalTitle: \"Edit MyModel\",\r\n            MyModelId: dep.MyModelId,\r\n            Name:dep.Name\r\n        });\r\n    }\r\n\r\n    createClick(){\r\n        fetch(variables.API_URL+\"mymodel/\",{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                Name:this.state.Name\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n            this.refreshList();\r\n        }, (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n\r\n    updateClick(){\r\n        fetch(variables.API_URL+\"mymodel/\",{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                MyModelId:this.state.MyModelId,\r\n                Name:this.state.Name,\r\n                Size:this.state.Size\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n            this.refreshList();\r\n        }, (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n\r\n    deleteClick(id){\r\n        if(window.confirm('Are you sure?')){\r\n        fetch(variables.API_URL+\"mymodel/\"+id+\"/\",{\r\n            method: 'DELETE',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>{\r\n            alert(result);\r\n            this.refreshList();\r\n        }, (error)=>{\r\n            alert('Failed');\r\n        })\r\n    }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            mymodel,\r\n            modalTitle,\r\n            Name,\r\n            Size,\r\n            MyModelId\r\n        }=this.state;\r\n        return (\r\n            <div>\r\n                <button type = \"button\"\r\n                className = \"btn btn-primary m-2 float-end\"\r\n                data-bs-toggle = \"modal\"\r\n                data-bs-target = \"#exampleModal\"\r\n                onClick = {()=>this.addClick()}>\r\n                    Add MyModel\r\n                </button>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <div className = \"d-flex flex-row\">\r\n                                <input className = \"form-control m-2\"\r\n                                onChange = {this.changeMyModelIdFilter}\r\n                                placeholder = \"Filter\"/>\r\n                                <button type = \"button\" className = \"btn btn-light\"\r\n                                onClick = {()=> this.sortResult(\"MyModelId\", true)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-down-square-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5a.5.5 0 0 1 1 0z\"/>\r\n                                </svg>\r\n                                </button>\r\n\r\n                                <button type = \"button\" className = \"btn btn-light\"\r\n                                onClick = {()=> this.sortResult(\"MyModelId\", false)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-up-square-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2 16a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2zm6.5-4.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 1 0z\"/>\r\n                                </svg>\r\n                                </button>\r\n                                </div>\r\n                                MyModelId\r\n                            </th>\r\n                            <th>\r\n                            <div className = \"d-flex flex-row\">\r\n                            <input className = \"form-control m-2\"\r\n                                onChange = {this.changeNameFilter}\r\n                                placeholder = \"Filter\"/>\r\n                                <button type = \"button\" className = \"btn btn-light\"\r\n                                onClick = {()=> this.sortResult(\"Name\", true)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-down-square-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5a.5.5 0 0 1 1 0z\"/>\r\n                                </svg>\r\n                                </button>\r\n\r\n                                <button type = \"button\" className = \"btn btn-light\"\r\n                                onClick = {()=> this.sortResult(\"Name\", false)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-up-square-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2 16a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2zm6.5-4.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 1 0z\"/>\r\n                                </svg>\r\n                                </button>\r\n                                </div>\r\n                                Name\r\n                            </th>\r\n                            <th>\r\n                            <div className = \"d-flex flex-row\">\r\n                            <input className = \"form-control m-2\"\r\n                                onChange = {this.changeSizeFilter}\r\n                                placeholder = \"Filter\"/>\r\n                                <button type = \"button\" className = \"btn btn-light\"\r\n                                onClick = {()=> this.sortResult(\"Size\", true)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-down-square-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5a.5.5 0 0 1 1 0z\"/>\r\n                                </svg>\r\n                                </button>\r\n\r\n                                <button type = \"button\" className = \"btn btn-light\"\r\n                                onClick = {()=> this.sortResult(\"Size\", false)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-up-square-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2 16a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2zm6.5-4.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 1 0z\"/>\r\n                                </svg>\r\n                                </button>\r\n                                </div>\r\n                                Size\r\n                            </th>\r\n                            <th>\r\n                                Options\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {mymodel.map(dep =>\r\n                            <tr key={dep.MyModelId}>\r\n                                <td>{dep.MyModelId}</td>\r\n                                <td>{dep.Name}</td>\r\n                                <td>{dep.Size}</td>\r\n                                <td>\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-light mr-1\"\r\n                                        data-bs-toggle = \"modal\"\r\n                                        data-bs-target = \"#exampleModal\"\r\n                                        onClick = {()=>this.editClick(dep)}>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                            <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-light mr-1\"\r\n                                        onClick={()=>this.deleteClick(dep.MyModelId)}>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash3-fill\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>)}\r\n                    </tbody>\r\n                </table>\r\n                <div className = \"modal fade\" id = \"exampleModal\" tabIndex = \"-1\" aria-hidden = \"true\">\r\n                    <div className = \"modal-dialog modal-lg modal-dialog-centered\">\r\n                        <div className = \"modal-content\">\r\n                            <div className = \"modal-header\">\r\n                                <h5 className = \"modal-title\">{modalTitle}</h5>\r\n                                <button type = \"button\" className = \"btn-close\" data-bs-dismiss = \"modal\" aria-label = \"close\">\r\n\r\n                                </button>\r\n                            </div>\r\n                            <div className = \"modal-body\">\r\n                                <div className = \"input-group mb-3\">\r\n                                    <span className = \"input-group-text\">Name</span>\r\n                                    <input type = \"text\" className = \"form-control\"\r\n                                    value = {Name}\r\n                                    onChange = {this.changeMyModelName}/>\r\n                                </div>\r\n                                {MyModelId == 0?\r\n                                <button type = \"button\"\r\n                                className = \"btn btn-primary float-start\"\r\n                                onClick={()=>this.createClick()}>\r\n                                    Create\r\n                                </button>:null}\r\n\r\n                                {MyModelId != 0?\r\n                                <button type = \"button\"\r\n                                className = \"btn btn-primary float-start\"\r\n                                onClick={()=>this.updateClick()}>\r\n                                    Update\r\n                                </button>:null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\pongster\\Documents\\ezpcbutworkingthistime\\FRONTEND\\src\\Variables.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":27},{"ruleId":"44","severity":1,"message":"45","line":58,"column":9,"nodeType":"46","messageId":"47","endLine":58,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":63,"column":9,"nodeType":"46","messageId":"47","endLine":63,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":68,"column":9,"nodeType":"46","messageId":"47","endLine":68,"endColumn":19},{"ruleId":"40","severity":1,"message":"48","line":171,"column":13,"nodeType":"42","messageId":"43","endLine":171,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":298,"column":44,"nodeType":"51","messageId":"52","endLine":298,"endColumn":46},{"ruleId":"49","severity":1,"message":"53","line":305,"column":44,"nodeType":"51","messageId":"52","endLine":305,"endColumn":46},"no-unused-vars","'tsConstructorType' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Size' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]